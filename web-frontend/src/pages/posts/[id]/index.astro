---
import { Icon } from 'astro-icon/components';
import Horizontal from '../../../components/Horizontal.astro';
import Tag from '../../../components/Tag.astro';
import Layout from '../../../layouts/Layout.astro';
import { fetchAuth, getSession } from '../../../scripts/Authenticate';
import Post from '../../../components/Post.astro';

const postID = Astro.params.id;
const response = await fetchAuth(`/posts/${postID}`, Astro.request);
const post = await response.json();

if(post.error) {
	console.log(`Error getting post, redirecting - ${post.error}`)
	return Astro.redirect('/');
}

const session = await getSession();
const isAuthor = session?.id == post.author
---

<Layout title='Posts'>
	<div class="postContainer">
		<div class="mainContent secondary lightest">
			<div class="postInfo">
				<div>
					<h3 style="margin-top: 0">Tags</h3>
					{post.tagData && post.tagData.map(tag => (
						<Tag name={tag.name} postCount={tag.postCount} href={`/posts?tags=${tag.name}`} />
					))}
				</div>

				<div>
					<h3>Info</h3>

					<Horizontal><span>Poster:</span><a>{post.authorName}</a></Horizontal>
					<span>{new Date(post.date).toDateString()}</span>
				</div>
			</div>
	
			<Post post={post}/>
		</div>

		<h3>Description</h3>
		<p style="margin-top: 5px">{ post.description }</p>

		<br>

		<Horizontal style="justify-content: space-between">
			<button onclick="window.history.go(-1)" class="secondary lightest"><Icon name="mingcute:arrow-left-fill" /> Back</button>
			{ isAuthor && <button class="secondary lightest" id="btnEditPost" data-postid={post._id}>Edit <Icon name="mingcute:edit-2-fill" /></button> }
		</Horizontal>
	</div>
</Layout>

<script>
	import { navigate } from "astro:transitions/client";

	function setup() {
		let btnEdit = document.getElementById('btnEditPost');
		btnEdit?.addEventListener('click', () => navigate(`/posts/${btnEdit.dataset.postid}/edit`));
	}

	setup();
	document.addEventListener('astro:after-swap', setup);
</script>

<style>
	.mainContent {
		display: flex;
		flex-direction: row;
		max-width: 95dvw;
		justify-content: space-between;
	}

	h3 { margin-bottom: 0; }

	.postInfo {
		width: 300px;
		height: 100%;
		display: flex;
		flex-direction: column;
		margin-right: 50px;
		padding-top: 10px;
		padding-left: 20px;
		padding-bottom: 10px;
	}

	.postInfo a {
		color: rgb(var(--accent), 0.8);
	}

	:global(.dark) .postInfo a { color: rgb(var(--text), 0.65); }

	.postInfo :global(.tag) {
		height: 25px;
		padding: 0;
		border: none;
		background: none;
		width: 100%;
	}

	.postInfo :global(.tag) {
		justify-content: space-between;
	}

	:global(.post) {
		height: 100%;
		margin-bottom: -7px;
	}
	
	:global(.post img, .post video) {
		object-fit: contain !important;
		max-height: 90dvh !important;

		min-width: unset !important;
	}

	button svg { margin-bottom: -2px; }

	@media screen and (max-width: 800px) {
		.mainContent { flex-direction: column-reverse; }
		
		.postInfo {
			width: calc(100% - 30px);
			padding: 15px;
		}

		:global(.post img, .post video) {
			width: 100%;
			height: auto;
			max-height: unset !important;
		}
	}
</style>